"""Reinitialize database.

Revision ID: 7614e7b25fef
Revises: 
Create Date: 2022-06-18 14:56:11.943667

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7614e7b25fef"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "order",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("discount", sa.Integer(), nullable=False),
        sa.Column("is_discount_to_go", sa.Boolean(), nullable=False),
        sa.Column("closed", sa.Boolean(), nullable=False),
        sa.Column("table", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            nullable=False,
            server_default=sa.text("now()"),
            onupdate=sa.text("now()"),
        ),
        sa.Column("old_id", sa.String(), nullable=True),
        sa.Column("sum", sa.Integer(), nullable=True),
        sa.Column("discounted_sum", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reservation",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("table", sa.String(), nullable=False),
        sa.Column("people", sa.Integer(), nullable=False),
        sa.Column("is_water_pipe", sa.Boolean(), nullable=False),
        sa.Column("hints", sa.String(), nullable=True),
        sa.Column("is_reservation_done", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_reservation_date"), "reservation", ["date"], unique=False)
    op.create_table(
        "inventory",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("aliases", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("register_code", sa.String(), nullable=False),
        sa.Column("price_default", sa.Integer(), nullable=True),
        sa.Column("price_gaiwan", sa.Integer(), nullable=True),
        sa.Column("price_package", sa.Integer(), nullable=True),
        sa.Column("price_bulk", sa.Integer(), nullable=True),
        sa.Column("price_gongfu", sa.Integer(), nullable=True),
        sa.Column("old_id", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            nullable=False,
            server_default=sa.text("now()"),
            onupdate=sa.text("now()"),
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_inventory_name"), "inventory", ["name"], unique=False)
    op.create_table(
        "task",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("day", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_task_day"), "task", ["day"], unique=False)
    op.create_table(
        "item",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("inventory_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("order_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            nullable=False,
            server_default=sa.text("now()"),
            onupdate=sa.text("now()"),
        ),
        sa.Column("old_id", sa.String(), nullable=True),
        sa.Column("price", sa.Integer(), nullable=True),
        sa.Column("discounted_price", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["order.id"],
        ),
        sa.ForeignKeyConstraint(
            ["inventory_id"],
            ["inventory.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "todo",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("done", sa.Boolean(), nullable=False),
        sa.Column("task_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_todo_date"), "todo", ["date"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_todo_date"), table_name="todo")
    op.drop_table("todo")
    op.drop_table("item")
    op.drop_index(op.f("ix_task_day"), table_name="task")
    op.drop_table("task")
    op.drop_index(op.f("ix_inventory_name"), table_name="inventory")
    op.drop_table("inventory")
    op.drop_index(op.f("ix_reservation_date"), table_name="reservation")
    op.drop_table("reservation")
    op.drop_table("order")
    # ### end Alembic commands ###
